{
    "name": "ddt",
    "publisher": "spencerjames",
    "version": "0.0.2",
    "description": "Generate C#/.NET Xunit test class with test methods. If test-driven development (TDD) wasn't followed initially, try Development-Driven Testing (DDT) to increase code coverage and decrease technical debt.",
    "displayName": "Development-Driven Testing",
    "author": {
        "name": "Spencer James (kokoabim)",
        "email": "dev@kokoabim.com",
        "url": "https://swsj.me/"
    },
    "bugs": {
        "url": "https://github.com/kokoabim/vscode-development-driven-testing/issues",
        "email": "dev@kokoabim.com"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/kokoabim/vscode-development-driven-testing"
    },
    "license": "SEE LICENSE IN LICENSE.md",
    "icon": "./dist/images/ddt-icon-128px.png",
    "engines": {
        "vscode": "^1.70.0"
    },
    "homepage": "https://github.com/kokoabim/vscode-development-driven-testing/blob/main/README.md",
    "categories": [
        "Testing"
    ],
    "keywords": [
        "xunit",
        "test",
        "testing",
        "tdd",
        "ddt"
    ],
    "activationEvents": [],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "category": "DDT",
                "title": "Copy C# Xunit test classes for current file",
                "command": "kokoabim.ddt.copy-test-classes-for-file",
                "enablement": "editorLangId == csharp"
            },
            {
                "category": "DDT",
                "title": "Create C# Xunit test files for current file",
                "command": "kokoabim.ddt.create-test-files-for-file",
                "enablement": "editorLangId == csharp"
            },
            {
                "category": "DDT",
                "title": "Create C# Xunit test files for all files in current project",
                "command": "kokoabim.ddt.create-test-files-for-project"
            }
        ],
        "configuration": {
            "title": "Development-Driven Testing (DDT)",
            "properties": {
                "ddt.indicateTypeNullability": {
                    "title": "Indicate Type Nullability",
                    "description": "Indicate variable type nullability (i.e. T?).",
                    "type": "boolean",
                    "default": false
                },
                "ddt.typesNotToBeIndicatedAsNullable": {
                    "title": "Types Not to be Indicated as Nullable",
                    "description": "Types not to be indicated as nullable.",
                    "type": "array",
                    "default": [
                        "bool",
                        "Boolean",
                        "byte",
                        "Byte",
                        "char",
                        "Char",
                        "decimal",
                        "Decimal",
                        "double",
                        "Double",
                        "float",
                        "int",
                        "Int16",
                        "Int32",
                        "Int64",
                        "IntPtr",
                        "long",
                        "nint",
                        "nuint",
                        "sbyte",
                        "SByte",
                        "short",
                        "Single",
                        "System.Boolean",
                        "System.Byte",
                        "System.Char",
                        "System.Decimal",
                        "System.Double",
                        "System.Int16",
                        "System.Int32",
                        "System.Int64",
                        "System.IntPtr",
                        "System.SByte",
                        "System.Single",
                        "System.UInt16",
                        "System.UInt32",
                        "System.UInt64",
                        "System.UIntPtr",
                        "uint",
                        "UInt16",
                        "UInt32",
                        "UInt64",
                        "UIntPtr",
                        "ulong",
                        "ushort",
                        "void"
                    ]
                },
                "ddt.objectTypeForGenericParameters": {
                    "title": "Object Type for Generic Parameters",
                    "description": "Use the object type in place of generic type parameters.",
                    "type": "boolean",
                    "default": true
                },
                "ddt.reservedMethodNames": {
                    "title": "Reserved Method Names",
                    "description": "If a class has a method with one of these names, its test method will include the 'new' modifier.",
                    "type": "array",
                    "default": [
                        "Equals",
                        "GetHashCode",
                        "GetType",
                        "MemberwiseClone",
                        "ToString"
                    ]
                },
                "ddt.usingsFileContent": {
                    "title": "Usings File Content",
                    "description": "When generated (if it does not exist), test project `Usings.cs` file content.",
                    "type": "string",
                    "default": "global using Xunit;\n"
                },
                "ddt.useOnlyNewOperatorForInstanceInstantiation": {
                    "title": "Use only 'new' Operator for Instance Instantiation",
                    "description": "Beginning with C# 9.0, constructor invocation expressions are target-typed. That is, if a target type of an expression is known, you can omit a type name.",
                    "type": "boolean",
                    "default": false
                },
                "ddt.testClassNamePrefixIfFileAlreadyExists": {
                    "title": "Test Class Name Prefix if File Already Exists",
                    "description": "If a test class file already exists, this prefix will be added to the test class name and appended to the file.",
                    "type": "string",
                    "default": "Ddt"
                }
            }
        },
        "menus": {
            "editor/context": [
                {
                    "command": "kokoabim.ddt.copy-test-classes-for-file",
                    "when": "editorLangId == csharp"
                },
                {
                    "command": "kokoabim.ddt.create-test-files-for-file",
                    "when": "editorLangId == csharp"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./ && copyfiles images/ddt-icon-128px.png dist/",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./dist/test/vscode/runVSCodeTest.js"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.1",
        "@types/node": "^20.4.8",
        "@types/vscode": "^1.80.0",
        "@typescript-eslint/eslint-plugin": "^6.2.0",
        "@typescript-eslint/parser": "^6.2.0",
        "@vscode/test-electron": "^2.3.3",
        "esbuild": "^0.18.17",
        "eslint": "^8.45.0",
        "glob": "^10.3.3",
        "mocha": "^10.2.0",
        "nyc": "^15.1.0",
        "typescript": "^5.1.6"
    },
    "dependencies": {
        "minimatch": "9.0.3"
    }
}